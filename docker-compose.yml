services:
  db:
    image: postgres
    restart: on-failure
    env_file:
      - .env
    expose:
      - 5432
    volumes:
      - w_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB' ]
      interval: 1s
      retries: 2
      timeout: 1s

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env
    command: sh -c 'python3 manage.py migrate && python3 manage.py csu && gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3'

  nginx:
    image: nginx:latest
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - .:/app
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

volumes:
  w_data:
